{"version":3,"file":"memories-components_frame_XImgWorkerStub_ts.js?v=c995126c0962cc8aa175","mappings":"4BACIA,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,CAGAJ,EAAoBO,EAAID,ECxBxBN,EAAoBQ,EAAI,CAACJ,EAASK,KACjC,IAAI,IAAIC,KAAOD,EACXT,EAAoBW,EAAEF,EAAYC,KAASV,EAAoBW,EAAEP,EAASM,IAC5EE,OAAOC,eAAeT,EAASM,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDV,EAAoBgB,EAAI,CAAC,EAGzBhB,EAAoBiB,EAAKC,GACjBC,QAAQC,IAAIR,OAAOS,KAAKrB,EAAoBgB,GAAGM,QAAO,CAACC,EAAUb,KACvEV,EAAoBgB,EAAEN,GAAKQ,EAASK,GAC7BA,IACL,KCNJvB,EAAoBwB,EAAKN,GAEjB,YAAcA,EAAU,SAAW,CAAC,+FAA+F,uBAAuB,+BAAiC,wBAAwBA,GCH3NlB,EAAoBW,EAAI,CAACc,EAAKC,IAAUd,OAAOe,UAAUC,eAAeC,KAAKJ,EAAKC,GCClF1B,EAAoB8B,EAAK1B,IACH,oBAAX2B,QAA0BA,OAAOC,aAC1CpB,OAAOC,eAAeT,EAAS2B,OAAOC,YAAa,CAAEC,MAAO,WAE7DrB,OAAOC,eAAeT,EAAS,aAAc,CAAE6B,OAAO,GAAO,ECL9DjC,EAAoBkC,EAAI,qB,MCIxB,IAAIC,EAAkB,CACrB,mCAAsC,GAgBvCnC,EAAoBgB,EAAEoB,EAAI,CAAClB,EAASK,KAE/BY,EAAgBjB,IAElBmB,cAAcrC,EAAoBkC,EAAIlC,EAAoBwB,EAAEN,GAE9D,EAGD,IAAIoB,EAAqBC,KAAmB,aAAIA,KAAmB,cAAK,GACpEC,EAA6BF,EAAmBG,KAAKC,KAAKJ,GAC9DA,EAAmBG,KAvBCE,IACnB,IAAKC,EAAUC,EAAaC,GAAWH,EACvC,IAAI,IAAI1C,KAAY4C,EAChB7C,EAAoBW,EAAEkC,EAAa5C,KACrCD,EAAoBO,EAAEN,GAAY4C,EAAY5C,IAIhD,IADG6C,GAASA,EAAQ9C,GACd4C,EAASG,QACdZ,EAAgBS,EAASI,OAAS,EACnCR,EAA2BG,EAAK,C,KCXjC,MAAMM,EAAWV,KAAKW,SAASD,SAC/B,IAA0BA,EAASE,UAAU,EAAGF,EAASG,YAAY,KAAO,GAE5E,MAAMC,EAAqB,GAC3Bd,KAAKe,UAAY,SAAUC,GACzBF,EAAYZ,KAAKc,EACnB,EAEA,+KAAuBC,MAAK,WAC1BH,EAAYI,SAASd,IAAa,MAAC,OAAc,QAAd,EAAAJ,KAAKe,iBAAS,yBAAGX,EAAK,GAC3D,G","sources":["webpack:///memories/webpack/bootstrap","webpack:///memories/webpack/runtime/define property getters","webpack:///memories/webpack/runtime/ensure chunk","webpack:///memories/webpack/runtime/get javascript chunk filename","webpack:///memories/webpack/runtime/hasOwnProperty shorthand","webpack:///memories/webpack/runtime/make namespace object","webpack:///memories/webpack/runtime/publicPath","webpack:///memories/webpack/runtime/importScripts chunk loading","webpack:///memories/src/components/frame/XImgWorkerStub.ts"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"memories-\" + chunkId + \".js?v=\" + {\"vendors-node_modules_webworker-typed_dist_index_js-node_modules_workbox-expiration_index_mjs\":\"39158f4a59061cb76f36\",\"components_frame_XImgWorker_ts\":\"929144e247a9aeaafe48\"}[chunkId] + \"\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/apps/memories/js/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t\"components_frame_XImgWorkerStub_ts\": 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunk\"] = self[\"webpackChunk\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","/**\n * This is a hack to make webpack work with web workers.\n * It is not a real worker, but a stub that loads the real worker.\n * This way we can set the public path to the current directory\n * before the actual worker loads, which in turn allows the worker\n * to load other webpack chunks.\n */\n\nconst pathname = self.location.pathname;\n__webpack_public_path__ = pathname.substring(0, pathname.lastIndexOf('/') + 1);\n\nconst missedQueue: any[] = [];\nself.onmessage = function (val: any) {\n  missedQueue.push(val);\n};\n\nimport('./XImgWorker').then(function () {\n  missedQueue.forEach((data: any) => self.onmessage?.(data));\n});\n"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","d","definition","key","o","Object","defineProperty","enumerable","get","f","e","chunkId","Promise","all","keys","reduce","promises","u","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","p","installedChunks","i","importScripts","chunkLoadingGlobal","self","parentChunkLoadingFunction","push","bind","data","chunkIds","moreModules","runtime","length","pop","pathname","location","substring","lastIndexOf","missedQueue","onmessage","val","then","forEach"],"sourceRoot":""}