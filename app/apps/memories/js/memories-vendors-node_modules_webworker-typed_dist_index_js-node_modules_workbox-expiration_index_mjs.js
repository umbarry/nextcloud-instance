"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["vendors-node_modules_webworker-typed_dist_index_js-node_modules_workbox-expiration_index_mjs"],{38124:()=>{try{self["workbox:core:7.0.0"]&&_()}catch(e){}},12390:()=>{try{self["workbox:expiration:7.0.0"]&&_()}catch(e){}},49512:(e,t,n)=>{function s(e){return self.onmessage=async({data:t})=>{try{const n=e[t.name];if(!n)throw new Error(`[BUG] No handler for type ${t.name}`);let s=n.apply(self,t.args);s instanceof Promise&&(s=await s),self.postMessage({reqid:t.reqid,resolve:s})}catch(e){self.postMessage({reqid:t.reqid,reject:e.message})}},null}n.d(t,{d:()=>s})},49710:(e,t,n)=>{n.d(t,{A:()=>v});n(38124);Error;const s=(e,t)=>t.some((t=>e instanceof t));let r,i;const a=new WeakMap,o=new WeakMap,c=new WeakMap,d=new WeakMap,u=new WeakMap;let h={get(e,t,n){if(e instanceof IDBTransaction){if("done"===t)return o.get(e);if("objectStoreNames"===t)return e.objectStoreNames||c.get(e);if("store"===t)return n.objectStoreNames[1]?void 0:n.objectStore(n.objectStoreNames[0])}return l(e[t])},set:(e,t,n)=>(e[t]=n,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function m(e){return e!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(i||(i=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(e)?function(...t){return e.apply(f(this),t),l(a.get(this))}:function(...t){return l(e.apply(f(this),t))}:function(t,...n){const s=e.call(f(this),t,...n);return c.set(s,t.sort?t.sort():[t]),l(s)}}function p(e){return"function"==typeof e?m(e):(e instanceof IDBTransaction&&function(e){if(o.has(e))return;const t=new Promise(((t,n)=>{const s=()=>{e.removeEventListener("complete",r),e.removeEventListener("error",i),e.removeEventListener("abort",i)},r=()=>{t(),s()},i=()=>{n(e.error||new DOMException("AbortError","AbortError")),s()};e.addEventListener("complete",r),e.addEventListener("error",i),e.addEventListener("abort",i)}));o.set(e,t)}(e),s(e,r||(r=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction]))?new Proxy(e,h):e)}function l(e){if(e instanceof IDBRequest)return function(e){const t=new Promise(((t,n)=>{const s=()=>{e.removeEventListener("success",r),e.removeEventListener("error",i)},r=()=>{t(l(e.result)),s()},i=()=>{n(e.error),s()};e.addEventListener("success",r),e.addEventListener("error",i)}));return t.then((t=>{t instanceof IDBCursor&&a.set(t,e)})).catch((()=>{})),u.set(t,e),t}(e);if(d.has(e))return d.get(e);const t=p(e);return t!==e&&(d.set(e,t),u.set(t,e)),t}const f=e=>u.get(e);const _=["get","getKey","getAll","getAllKeys","count"],g=["put","add","delete","clear"],w=new Map;function b(e,t){if(!(e instanceof IDBDatabase)||t in e||"string"!=typeof t)return;if(w.get(t))return w.get(t);const n=t.replace(/FromIndex$/,""),s=t!==n,r=g.includes(n);if(!(n in(s?IDBIndex:IDBObjectStore).prototype)||!r&&!_.includes(n))return;const i=async function(e,...t){const i=this.transaction(e,r?"readwrite":"readonly");let a=i.store;return s&&(a=a.index(t.shift())),(await Promise.all([a[n](...t),r&&i.done]))[0]};return w.set(t,i),i}h=(e=>({...e,get:(t,n,s)=>b(t,n)||e.get(t,n,s),has:(t,n)=>!!b(t,n)||e.has(t,n)}))(h);n(12390);const D="cache-entries",x=e=>{const t=new URL(e,location.href);return t.hash="",t.href};class y{constructor(e){this._db=null,this._cacheName=e}_upgradeDb(e){const t=e.createObjectStore(D,{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1})}_upgradeDbAndDeleteOldDbs(e){this._upgradeDb(e),this._cacheName&&function(e,{blocked:t}={}){const n=indexedDB.deleteDatabase(e);t&&n.addEventListener("blocked",(e=>t(e.oldVersion,e))),l(n).then((()=>{}))}(this._cacheName)}async setTimestamp(e,t){const n={url:e=x(e),timestamp:t,cacheName:this._cacheName,id:this._getId(e)},s=(await this.getDb()).transaction(D,"readwrite",{durability:"relaxed"});await s.store.put(n),await s.done}async getTimestamp(e){const t=await this.getDb(),n=await t.get(D,this._getId(e));return null==n?void 0:n.timestamp}async expireEntries(e,t){const n=await this.getDb();let s=await n.transaction(D).store.index("timestamp").openCursor(null,"prev");const r=[];let i=0;for(;s;){const n=s.value;n.cacheName===this._cacheName&&(e&&n.timestamp<e||t&&i>=t?r.push(s.value):i++),s=await s.continue()}const a=[];for(const e of r)await n.delete(D,e.id),a.push(e.url);return a}_getId(e){return this._cacheName+"|"+x(e)}async getDb(){return this._db||(this._db=await function(e,t,{blocked:n,upgrade:s,blocking:r,terminated:i}={}){const a=indexedDB.open(e,t),o=l(a);return s&&a.addEventListener("upgradeneeded",(e=>{s(l(a.result),e.oldVersion,e.newVersion,l(a.transaction),e)})),n&&a.addEventListener("blocked",(e=>n(e.oldVersion,e.newVersion,e))),o.then((e=>{i&&e.addEventListener("close",(()=>i())),r&&e.addEventListener("versionchange",(e=>r(e.oldVersion,e.newVersion,e)))})).catch((()=>{})),o}("workbox-expiration",1,{upgrade:this._upgradeDbAndDeleteOldDbs.bind(this)})),this._db}}class v{constructor(e,t={}){this._isRunning=!1,this._rerunRequested=!1,this._maxEntries=t.maxEntries,this._maxAgeSeconds=t.maxAgeSeconds,this._matchOptions=t.matchOptions,this._cacheName=e,this._timestampModel=new y(e)}async expireEntries(){if(this._isRunning)return void(this._rerunRequested=!0);this._isRunning=!0;const e=this._maxAgeSeconds?Date.now()-1e3*this._maxAgeSeconds:0,t=await this._timestampModel.expireEntries(e,this._maxEntries),n=await self.caches.open(this._cacheName);for(const e of t)await n.delete(e,this._matchOptions);this._isRunning=!1,this._rerunRequested&&(this._rerunRequested=!1,this.expireEntries().then((()=>{})))}async updateTimestamp(e){await this._timestampModel.setTimestamp(e,Date.now())}async isURLExpired(e){if(this._maxAgeSeconds){const t=await this._timestampModel.getTimestamp(e),n=Date.now()-1e3*this._maxAgeSeconds;return void 0===t||t<n}return!1}async delete(){this._rerunRequested=!1,await this._timestampModel.expireEntries(1/0)}}"undefined"!=typeof registration&&registration.scope,new Set}}]);
//# sourceMappingURL=memories-vendors-node_modules_webworker-typed_dist_index_js-node_modules_workbox-expiration_index_mjs.js.map?v=39158f4a59061cb76f36